import{_ as a,a as o,b as t,c as i,d as r,e as s,f as n,g as l}from"./chunks/conveyor3.Bz1hLLY-.js";import{_ as c,c as m,o as g,ag as p}from"./chunks/framework.C_7JoTpM.js";const d="/2025-Team-Epibot-Docs/week4/videos/conveyor_demonstration.mp4",h="/2025-Team-Epibot-Docs/week4/videos/demo_it.webm",q=JSON.parse('{"title":"Smart Conveyor System – IT Component Overview","description":"","frontmatter":{},"headers":[],"relativePath":"week4/pole-it/index.md","filePath":"week4/pole-it/index.md"}'),u={name:"week4/pole-it/index.md"};function b(k,e,_,v,y,w){return g(),m("div",null,e[0]||(e[0]=[p('<h1 id="smart-conveyor-system-–-it-component-overview" tabindex="-1">Smart Conveyor System – IT Component Overview <a class="header-anchor" href="#smart-conveyor-system-–-it-component-overview" aria-label="Permalink to &quot;Smart Conveyor System – IT Component Overview&quot;">​</a></h1><p>The goal of this test is to implement an intelligent and reliable embedded system with real-time web visualization.</p><video src="'+d+'" controls autoplay muted style="width:100%;max-width:800px;height:auto;"> Your browser does not support the video tag. </video><video src="'+h+'" controls autoplay muted style="width:100%;max-width:800px;height:auto;"> Your browser does not support the video tag. </video><h2 id="_1-intelligent-detection" tabindex="-1">1. Intelligent Detection <a class="header-anchor" href="#_1-intelligent-detection" aria-label="Permalink to &quot;1. Intelligent Detection&quot;">​</a></h2><ul><li>Integrate a color sensor capable of detecting 4 waste types: <strong>Red</strong>, <strong>Blue</strong>, <strong>Green</strong>, <strong>Yellow</strong></li><li>Implement reliable object detection using</li></ul><h3 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h3><ul><li>Connect and configure color sensor</li><li>Calibrate color recognition for 4 types</li><li>Implement presence detection logic</li></ul><hr><h2 id="_2-conveyor-automation" tabindex="-1">2. Conveyor Automation <a class="header-anchor" href="#_2-conveyor-automation" aria-label="Permalink to &quot;2. Conveyor Automation&quot;">​</a></h2><ul><li>Conveyor activates <strong>only</strong> when waste is detected</li></ul><h3 id="tasks-1" tabindex="-1">Tasks <a class="header-anchor" href="#tasks-1" aria-label="Permalink to &quot;Tasks&quot;">​</a></h3><ul><li>Develop motor control logic for conveyor</li><li>Trigger conveyor based on presence signal</li></ul><hr><h2 id="_3-web-interface-–-real-time-monitoring" tabindex="-1">3. Web Interface – Real-Time Monitoring <a class="header-anchor" href="#_3-web-interface-–-real-time-monitoring" aria-label="Permalink to &quot;3. Web Interface – Real-Time Monitoring&quot;">​</a></h2><ul><li>Web interface displays <strong>quantity per waste type</strong></li></ul><h3 id="tasks-2" tabindex="-1">Tasks <a class="header-anchor" href="#tasks-2" aria-label="Permalink to &quot;Tasks&quot;">​</a></h3><ul><li>Design responsive and clean dashboard</li><li>Display real-time waste counters by color</li></ul><hr><h2 id="_4-data-processing" tabindex="-1">4. Data Processing <a class="header-anchor" href="#_4-data-processing" aria-label="Permalink to &quot;4. Data Processing&quot;">​</a></h2><ul><li>Maintain accurate counting by waste type</li><li>Ensure real-time data updates</li></ul><h3 id="tasks-3" tabindex="-1">Tasks <a class="header-anchor" href="#tasks-3" aria-label="Permalink to &quot;Tasks&quot;">​</a></h3><ul><li>Implement counter logic for each color</li><li>Use pub/sub and API to push data to UI</li></ul><hr><h2 id="_5-system-integration" tabindex="-1">5. System Integration <a class="header-anchor" href="#_5-system-integration" aria-label="Permalink to &quot;5. System Integration&quot;">​</a></h2><ul><li>Ensure reliable communication between <strong>Arduino (ATmega328P)</strong> and the <strong>web interface</strong></li></ul><h3 id="tasks-4" tabindex="-1">Tasks <a class="header-anchor" href="#tasks-4" aria-label="Permalink to &quot;Tasks&quot;">​</a></h3><ul><li>Use serial protocol</li><li>Parse and forward data from Arduino to web server (Arduino -&gt; ROS -&gt; Web site)</li></ul><p><a href="/2025-Team-Epibot-Docs/week4/images/pcb1.jpeg"><img src="'+a+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/pcb2.jpeg"><img src="'+o+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/pcb3.jpeg"><img src="'+t+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/pcb4.jpeg"><img src="'+i+'" alt="Vercel Homepage"></a></p><h2 id="" tabindex="-1"><a href="/2025-Team-Epibot-Docs/week4/images/convenyor.jpeg"><img src="'+r+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/conveyor1.jpeg"><img src="'+s+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/conveyor2.jpeg"><img src="'+n+'" alt="Vercel Homepage"></a><a href="/2025-Team-Epibot-Docs/week4/images/conveyor3.jpeg"><img src="'+l+`" alt="Vercel Homepage"></a> <a class="header-anchor" href="#" aria-label="Permalink to &quot;[![Vercel Homepage](/week4/images/convenyor.jpeg)](/week4/images/convenyor.jpeg)
[![Vercel Homepage](/week4/images/conveyor1.jpeg)](/week4/images/conveyor1.jpeg)
[![Vercel Homepage](/week4/images/conveyor2.jpeg)](/week4/images/conveyor2.jpeg)
[![Vercel Homepage](/week4/images/conveyor3.jpeg)](/week4/images/conveyor3.jpeg)&quot;">​</a></h2>`,30)]))}const x=c(u,[["render",b]]);export{q as __pageData,x as default};

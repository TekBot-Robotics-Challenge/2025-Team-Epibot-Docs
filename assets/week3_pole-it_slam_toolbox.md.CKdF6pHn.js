import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.C_7JoTpM.js";const t="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image1.jpeg",l="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image4.jpeg",p="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image5.jpeg",o="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image10.jpeg",r="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image7.jpeg",h="/2025-Team-Epibot-Docs/week3/images/IT/work-session/image8.jpeg",d="/2025-Team-Epibot-Docs/week3/videos/IT/slam_mapping_compressed.mp4",k="/2025-Team-Epibot-Docs/week3/images/IT/tekbot_map.png",w=JSON.parse('{"title":"Creating a Map with SLAM Toolbox (Step-by-Step Guide)","description":"","frontmatter":{},"headers":[],"relativePath":"week3/pole-it/slam_toolbox.md","filePath":"week3/pole-it/slam_toolbox.md"}'),c={name:"week3/pole-it/slam_toolbox.md"};function m(g,s,b,u,y,F){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="creating-a-map-with-slam-toolbox-step-by-step-guide" tabindex="-1">Creating a Map with SLAM Toolbox (Step-by-Step Guide) <a class="header-anchor" href="#creating-a-map-with-slam-toolbox-step-by-step-guide" aria-label="Permalink to &quot;Creating a Map with SLAM Toolbox (Step-by-Step Guide)&quot;">‚Äã</a></h1><p>Hey there! I&#39;m going to walk you through the full process of how <strong>we created a map using <code>SLAM Toolbox</code> in ROS 2</strong>. I&#39;ll try to explain everything like I&#39;m talking to my grandma slowly, clearly, and with real-world examples.</p><hr><h2 id="what-is-slam" tabindex="-1">What is SLAM? <a class="header-anchor" href="#what-is-slam" aria-label="Permalink to &quot;What is SLAM?&quot;">‚Äã</a></h2><p>SLAM stands for <strong><code>Simultaneous Localization And Mapping</code></strong>. Imagine you&#39;re in a dark room with a flashlight and you try to draw a map as you explore it. You don&#39;t know where you are at first, and the room is unfamiliar. But little by little, you build the map while figuring out your position at the same time.</p><p>That‚Äôs what we‚Äôre doing with our robot: making a map and figuring out its location in real-time.</p><hr><h2 id="what-we-needed-requirements" tabindex="-1">What We Needed (Requirements) <a class="header-anchor" href="#what-we-needed-requirements" aria-label="Permalink to &quot;What We Needed (Requirements)&quot;">‚Äã</a></h2><p>Before we started, we made sure to have:</p><ul><li><strong>ROS 2 Humble</strong> installed on our computer üê¢</li><li><strong>SLAM Toolbox</strong> package</li><li>A robot model that publishes <strong>LaserScan</strong> (<code>/scan</code>) and <strong>TF</strong> (transform tree)</li><li><strong>RViz</strong> for visualization</li></ul><hr><h2 id="step-1-creating-the-ros-2-workspace" tabindex="-1"><code>Step 1</code>: Creating the ROS 2 Workspace <a class="header-anchor" href="#step-1-creating-the-ros-2-workspace" aria-label="Permalink to &quot;\`Step 1\`: Creating the ROS 2 Workspace&quot;">‚Äã</a></h2><p>We created a workspace where we would build and organize all the packages:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/2025-Team-Epibot-Code/week3/IT_pole/tekbot_ws/src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/2025-Team-Epibot-Code/week3/IT_pole/tekbot_ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install/setup.bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><h2 id="step-2-installing-slam-toolbox" tabindex="-1"><code>Step 2</code>: Installing SLAM Toolbox <a class="header-anchor" href="#step-2-installing-slam-toolbox" aria-label="Permalink to &quot;\`Step 2\`: Installing SLAM Toolbox&quot;">‚Äã</a></h2><p>We installed the SLAM Toolbox package like this:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ros-humble-slam-toolbox</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><h2 id="step-3-launching-slam-toolbox-for-mapping" tabindex="-1"><code>Step 3</code>: Launching SLAM Toolbox for Mapping <a class="header-anchor" href="#step-3-launching-slam-toolbox-for-mapping" aria-label="Permalink to &quot;\`Step 3\`: Launching SLAM Toolbox for Mapping&quot;">‚Äã</a></h2><p>We created a custom launch file that starts both the <strong>SLAM node</strong>. Here‚Äôs an example:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaunchDescription</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launch_ros.actions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Node</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ament_index_python.packages </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_package_share_directory</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generate_launch_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    slam_config_file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        get_package_share_directory(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tekbot_control&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;slam_toolbox.yaml&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaunchDescription([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Node(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            package</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;slam_toolbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            executable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sync_slam_toolbox_node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;slam_toolbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screen&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[slam_config_file]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>We saved this in a file called <code>slam_toolbox.launch.py</code>.</p><p>Then we ran it:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tekbot_control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> slam_toolbox.launch.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><h2 id="step-4-driving-the-robot-to-map" tabindex="-1">Step 4: Driving the Robot to Map <a class="header-anchor" href="#step-4-driving-the-robot-to-map" aria-label="Permalink to &quot;Step 4: Driving the Robot to Map&quot;">‚Äã</a></h2><p>We used <strong>keyboard teleoperation</strong> to move the robot:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> teleop_twist_keyboard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> teleop_twist_keyboard</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>As the robot moved, SLAM Toolbox automatically updated the map.</p><hr><h2 id="step-5-visualizing-with-rviz" tabindex="-1">Step 5: Visualizing with RViz <a class="header-anchor" href="#step-5-visualizing-with-rviz" aria-label="Permalink to &quot;Step 5: Visualizing with RViz&quot;">‚Äã</a></h2><p>Launching RViz via Launch File To open RViz with the robot model and our custom visualization settings, we used the following command:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tekbot_description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rviz.launch.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This automatically:</p><ul><li><p>Loads the robot description</p></li><li><p>Starts RViz with our tekbot_des.rviz config file</p></li><li><p>Displays the live LIDAR data and the map being built in real-time</p></li></ul><p>Make sure tekbot_description is built and sourced before running this:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/2025-Team-Epibot-Code/week3/IT_pole/tekbot_ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install/setup.bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Here‚Äôs what RViz showed us (automatically or manually added):</p><ul><li><p>The <code>/map</code> topic ‚Äî shows how the environment is being drawn</p></li><li><p>The <code>/scan</code> topic ‚Äî shows what the LIDAR sees (laser beams hitting walls/obstacles)</p></li><li><p>Fixed Frame set to map ‚Äî this makes all other data align properly in the map frame</p></li></ul><p>If something wasn&#39;t showing, we just clicked <code>&quot;Add&quot;</code>, selected the appropriate display (like Map or LaserScan), and set the topic accordingly.</p><hr><h2 id="step-6-saving-the-map" tabindex="-1">Step 6: Saving the Map <a class="header-anchor" href="#step-6-saving-the-map" aria-label="Permalink to &quot;Step 6: Saving the Map&quot;">‚Äã</a></h2><p>Once we were happy with the map, we saved it with:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nav2_map_server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> map_saver_cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/2025-Team-Epibot-Code/week3/IT_pole/tekbot_ws/src/map_provider/maps/tekbot_map</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This created two files:</p><ul><li><code>tekbot_map.yaml</code> (map configuration)</li><li><code>tekbot_map.pgm</code> (actual image)</li></ul><hr><h2 id="some-problems-we-faced-and-fixed" tabindex="-1">Some Problems We Faced (And Fixed) <a class="header-anchor" href="#some-problems-we-faced-and-fixed" aria-label="Permalink to &quot;Some Problems We Faced (And Fixed)&quot;">‚Äã</a></h2><h3 id="_1-two-maps-showing-in-rviz" tabindex="-1">1. <strong>Two Maps Showing in RViz</strong> <a class="header-anchor" href="#_1-two-maps-showing-in-rviz" aria-label="Permalink to &quot;1. **Two Maps Showing in RViz**&quot;">‚Äã</a></h3><p>We shut down previous nodes and cleaned old topics to avoid overlapping maps.</p><h3 id="_2-map-server-failed-to-load-the-map" tabindex="-1">2. <strong>Map Server Failed to Load the Map</strong> <a class="header-anchor" href="#_2-map-server-failed-to-load-the-map" aria-label="Permalink to &quot;2. **Map Server Failed to Load the Map**&quot;">‚Äã</a></h3><p>The <code>map_server</code> failed to load the <code>.yaml</code> map file</p><hr><h2 id="üì∏-team-working-gallery" tabindex="-1">üì∏ Team Working Gallery <a class="header-anchor" href="#üì∏-team-working-gallery" aria-label="Permalink to &quot;üì∏ Team Working Gallery&quot;">‚Äã</a></h2><div style="display:flex;flex-wrap:wrap;gap:10px;justify-content:center;"><img src="`+t+'" width="30%"><img src="'+l+'" width="30%"><img src="'+p+'" width="30%"></div><hr><div style="display:flex;flex-wrap:wrap;gap:10px;justify-content:center;"><img src="'+o+'" width="30%"><img src="'+r+'" width="30%"><img src="'+h+'" width="30%"></div><hr><h2 id="üé•-videos-and-demos" tabindex="-1">üé• Videos and Demos <a class="header-anchor" href="#üé•-videos-and-demos" aria-label="Permalink to &quot;üé• Videos and Demos&quot;">‚Äã</a></h2><video src="'+d+'" controls autoplay muted style="width:100%;max-width:800px;height:auto;"> Your browser does not support the video tag. </video><hr><h2 id="final-map" tabindex="-1">Final map <a class="header-anchor" href="#final-map" aria-label="Permalink to &quot;Final map&quot;">‚Äã</a></h2><img src="'+k+'" alt="Tekbot Map" style="width:50%;height:auto;"><hr><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">‚Äã</a></h2><p>We successfully created a map using:</p><ol><li>SLAM Toolbox</li><li>Our robot‚Äôs LIDAR and TF</li><li>Manual teleoperation</li></ol><p>We learned how to set it up, visualize it, fix errors, and save the final result.</p>',69)]))}const v=a(c,[["render",m]]);export{w as __pageData,v as default};
